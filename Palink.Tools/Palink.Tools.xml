<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Palink.Tools</name>
    </assembly>
    <members>
        <member name="T:Palink.Tools.Communication.Adapter.SerialPortAdapter">
            <summary>
            SerialPortAdapter
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.SerialPortAdapter.#ctor(RJCP.IO.Ports.SerialPortStream)">
            <summary>
            SerialPortAdapter
            </summary>
            <param name="serialPortStream"></param>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.SerialPortAdapter.InfiniteTimeout">
            <summary>
            InfiniteTimeout
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.SerialPortAdapter.ReadTimeout">
            <summary>
            读数据超时时间
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.SerialPortAdapter.WriteTimeout">
            <summary>
            写数据超时时间
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.SerialPortAdapter.DiscardInBuffer">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.SerialPortAdapter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读取数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.SerialPortAdapter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            写数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.SerialPortAdapter.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.SerialPortAdapter.Dispose(System.Boolean)">
            <summary>
            释放对象
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Palink.Tools.Communication.Adapter.TcpClientAdapter">
            <summary>
            TcpClientAdapter
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.TcpClientAdapter.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            TcpClientAdapter
            </summary>
            <param name="tcpClient"></param>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.TcpClientAdapter.InfiniteTimeout">
            <summary>
            InfiniteTimeout
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.TcpClientAdapter.ReadTimeout">
            <summary>
            读数据超时时间
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.TcpClientAdapter.WriteTimeout">
            <summary>
            写数据超时时间
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.TcpClientAdapter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            写数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="size"></param>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.TcpClientAdapter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读取数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.TcpClientAdapter.DiscardInBuffer">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.TcpClientAdapter.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.TcpClientAdapter.Dispose(System.Boolean)">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="T:Palink.Tools.Communication.Adapter.UdpClientAdapter">
            <summary>
            UdpClientAdapter
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.UdpClientAdapter.#ctor(System.Net.Sockets.UdpClient)">
            <summary>
            UdpClientAdapter
            </summary>
            <param name="udpClient"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.UdpClientAdapter.InfiniteTimeout">
            <summary>
            InfiniteTimeout
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.UdpClientAdapter.ReadTimeout">
            <summary>
            读数据超时时间
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Adapter.UdpClientAdapter.WriteTimeout">
            <summary>
            写数据超时时间
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.UdpClientAdapter.DiscardInBuffer">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.UdpClientAdapter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读取数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.UdpClientAdapter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            写数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.UdpClientAdapter.Dispose">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Adapter.UdpClientAdapter.Dispose(System.Boolean)">
            <summary>
            释放对象
            </summary>
        </member>
        <member name="T:Palink.Tools.Communication.Device.BaseMaster">
            <summary>
            基础Master
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Device.BaseMaster.ReadWriteTimes">
            <summary>
            读写次数
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.#ctor(Palink.Tools.Communication.Interface.IStreamResource,Palink.Tools.Extensions.PLLogging.IPlLogger)">
            <summary>
            BaseMaster
            </summary>
            <param name="streamResource"></param>
            <param name="logger"></param>
        </member>
        <member name="P:Palink.Tools.Communication.Device.BaseMaster.StreamResource">
            <summary>
            StreamResource
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Device.BaseMaster.PlLogger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.SendData(Palink.Tools.Communication.Interface.IMessage,System.Boolean)">
            <summary>
            发送数据
            </summary>
            <param name="message"></param>
            <param name="useHexLog">显示hex日志还是UTF8解码后的字符</param>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.SendDataAsync(Palink.Tools.Communication.Interface.IMessage,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            发送数据
            </summary>
            <param name="message"></param>
            <param name="useHexLog">显示hex日志还是UTF8解码后的字符</param>
            <param name="token"></param>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.InitTimeout">
            <summary>
            虚方法，初始化读写超时
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.Unicast(Palink.Tools.Communication.Interface.IMessage,System.Boolean,System.Boolean)">
            <summary>
            单播命令
            </summary>
            <param name="message"></param>
            <param name="ignoreReadBytes">忽略读取字节的长度，读取到数据就返回，主要用于TCP</param>
            <param name="useHexLog">显示hex日志还是UTF8解码后的字符</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.UnicastAsync(Palink.Tools.Communication.Interface.IMessage,System.Threading.CancellationToken,System.Boolean,System.Boolean)">
            <summary>
            异步单播命令
            </summary>
            <param name="message"></param>
            <param name="token"></param>
            <param name="ignoreReadBytes">忽略读取字节的长度，读取到数据就返回，主要用于TCP</param>
            <param name="useHexLog">显示hex日志还是UTF8解码后的字符</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.CheckData(Palink.Tools.Communication.Interface.IMessage)">
            <summary>
            数据校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.CreateFrame(System.ValueTuple{System.Byte,System.Byte,System.Byte[]})">
            <summary>
            创建发送数据体
            </summary>
            <param name="noCheckFrame"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Device.BaseMaster.CreateStringFrame(System.String)">
            <summary>
            创建字符串发送数据体
            </summary>
            <param name="frame"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Communication.Interface.IMessage">
            <summary>
            信息存储类
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IMessage.Data">
            <summary>
            发送区
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IMessage.Buffer">
            <summary>
            接收区
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IMessage.ReadBytes">
            <summary>
            读取字节数
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IMessage.SendBytes">
            <summary>
            发送字节数
            </summary>
        </member>
        <member name="T:Palink.Tools.Communication.Interface.IStreamResource">
            <summary>
            StreamResource
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IStreamResource.InfiniteTimeout">
            <summary>
            InfiniteTimeout
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IStreamResource.ReadTimeout">
            <summary>
            读数据超时时间
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Interface.IStreamResource.WriteTimeout">
            <summary>
            写数据超时时间
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Interface.IStreamResource.DiscardInBuffer">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Interface.IStreamResource.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读取数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Interface.IStreamResource.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            写数据
            </summary>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="T:Palink.Tools.Communication.Master">
            <summary>
            Master
            </summary>
        </member>
        <member name="F:Palink.Tools.Communication.Master.Locker">
            <summary>
            线程锁
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Master.IgnoreStringList">
            <summary>
            需要忽略的数据帧
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Master.#ctor(Palink.Tools.Communication.Interface.IStreamResource,Palink.Tools.Extensions.PLLogging.IPlLogger)">
            <summary>
            Master
            </summary>
            <param name="streamResource"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Palink.Tools.Communication.Master.InitTimeout">
            <summary>
            虚方法，初始化读写超时
            </summary>
        </member>
        <member name="M:Palink.Tools.Communication.Master.Unicast(Palink.Tools.Communication.Interface.IMessage,System.Boolean,System.Boolean)">
            <summary>
            单播命令
            </summary>
            <param name="message"></param>
            <param name="ignoreReadBytes">忽略读取字节的长度，读取到数据就返回，主要用于TCP</param>
            <param name="useHexLog">显示hex日志还是UTF8解码后的字符</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Communication.Master.UnicastAsync(Palink.Tools.Communication.Interface.IMessage,System.Threading.CancellationToken,System.Boolean,System.Boolean)">
            <summary>
            异步单播命令
            </summary>
            <param name="message"></param>
            <param name="token"></param>
            <param name="ignoreReadBytes">忽略读取字节的长度，读取到数据就返回，主要用于TCP</param>
            <param name="useHexLog">显示hex日志还是UTF8解码后的字符</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Communication.Message.BaseMessage">
            <summary>
            基本消息体
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Message.BaseMessage.Data">
            <summary>
            发送区
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Message.BaseMessage.Buffer">
            <summary>
            接收区
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Message.BaseMessage.ReadBytes">
            <summary>
            读取字节数
            </summary>
        </member>
        <member name="P:Palink.Tools.Communication.Message.BaseMessage.SendBytes">
            <summary>
            发送字节数
            </summary>
        </member>
        <member name="T:Palink.Tools.Extensions.PLArray.ArrayExtensions">
            <summary>
            ArrayExtensions
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLArray.ArrayExtensions.ForEach(System.Array,System.Action{System.Array,System.Int32[]})">
            <summary>
            数组遍历
            </summary>
            <param name="array"></param>
            <param name="action"></param>
        </member>
        <member name="T:Palink.Tools.Extensions.PLAttribute.AttributeExtensions">
            <summary>
            特性扩展方法
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLAttribute.AttributeExtensions.EnumDescription(System.Enum)">
            <summary>
            获取枚举描述信息
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLConvert.ConvertExtensions">
            <summary>
            转换器扩展类
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToByte(System.Object,System.Byte)">
            <summary>
            string转byte
            </summary>
            <param name="input">输入</param>
            <param name="defaultNum">转换失败默认</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToInt(System.Object,System.Int32)">
            <summary>
            string转int
            </summary>
            <param name="input">输入</param>
            <param name="defaultNum">转换失败默认</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToLong(System.Object,System.Int64)">
            <summary>
            string转long
            </summary>
            <param name="input">输入</param>
            <param name="defaultNum">转换失败默认</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToDouble(System.Object,System.Double)">
            <summary>
            string转double
            </summary>
            <param name="input">输入</param>
            <param name="defaultNum">转换失败默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToDecimal(System.Object,System.Decimal)">
            <summary>
            string转decimal
            </summary>
            <param name="input">输入</param>
            <param name="defaultNum">转换失败默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToFloat(System.Object,System.Single)">
            <summary>
            string转decimal
            </summary>
            <param name="input">输入</param>
            <param name="defaultNum">转换失败默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToBool(System.Object,System.Boolean,System.String,System.String)">
            <summary>
            string转bool
            </summary>
            <param name="input">输入</param>
            <param name="falseVal"></param>
            <param name="defaultBool">转换失败默认值</param>
            <param name="trueVal"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToString(System.ValueType,System.String)">
            <summary>
            值类型转string
            </summary>
            <param name="inputObj">输入</param>
            <param name="defaultStr">转换失败默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToDateTime(System.String,System.DateTime)">
            <summary>
            字符串转时间
            </summary>
            <param name="inputStr">输入</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToDateTime(System.String,System.String,System.DateTime)">
            <summary>
            字符串转时间
            </summary>
            <param name="inputStr">输入</param>
            <param name="formatter"></param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToDateTime(System.DateTime,System.String,System.String)">
            <summary>
            时间格式转换为字符串
            </summary>
            <param name="date"></param>
            <param name="formatter"></param>
            <param name="cultureInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToTrim(System.String)">
            <summary>
            字符串去空格
            </summary>
            <param name="inputStr">输入</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToEnum``1(System.String,``0)">
            <summary>
            字符串转枚举
            </summary>
            <typeparam name="T">输入</typeparam>
            <param name="str"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToList(System.Type)">
            <summary>
            将枚举类型转换为List
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.ConvertType(System.String)">
            <summary>
            根据类型名返回一个Type类型
            </summary>
            <param name="typeName">类型的名称</param>
            <returns>Type对象</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.ConvertTo``1(System.IConvertible)">
            <summary>
            类型直转
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryConvertTo``1(System.IConvertible,``0)">
            <summary>
            类型直转
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="defaultValue">转换失败的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryConvertTo``1(System.IConvertible,``0@)">
            <summary>
            类型直转
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="result">转换失败的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryConvertTo(System.IConvertible,System.Type,System.Object@)">
            <summary>
            类型直转
            </summary>
            <param name="value"></param>
            <param name="type">目标类型</param>
            <param name="result">转换失败的默认值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.ConvertTo(System.IConvertible,System.Type)">
            <summary>
            类型直转
            </summary>
            <param name="value"></param>
            <param name="type">目标类型</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TryToValueTuple``1(System.String)">
            <summary>
            元组json序列化数据反序列化
            </summary>
            <param name="valueTupleJson"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLConvert.ConvertExtensions.TupleTryToString``1(``0)">
            <summary>
            元组转字符串
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLConvert.Enumeration.EnumResponse">
            <summary>
            EnumResponse
            </summary>
        </member>
        <member name="P:Palink.Tools.Extensions.PLConvert.Enumeration.EnumResponse.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Palink.Tools.Extensions.PLConvert.Enumeration.EnumResponse.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Palink.Tools.Extensions.PLConvert.Enumeration.EnumResponse.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Palink.Tools.Extensions.PLLogging.BaseLogger">
            <summary>
            BaseLogger
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.BaseLogger.#ctor(Palink.Tools.Extensions.PLLogging.LoggingLevel)">
            <summary>
            BaseLogger
            </summary>
            <param name="minimumLoggingLevel"></param>
        </member>
        <member name="P:Palink.Tools.Extensions.PLLogging.BaseLogger.MinimumLoggingLevel">
            <summary>
            最小日志级别
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.BaseLogger.ShouldLog(Palink.Tools.Extensions.PLLogging.LoggingLevel)">
            <summary>
            是否需要打印该级别日志
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.BaseLogger.Log(Palink.Tools.Extensions.PLLogging.LoggingLevel,System.String)">
            <summary>
            输出日志
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.BaseLogger.LogCore(Palink.Tools.Extensions.PLLogging.LoggingLevel,System.String)">
            <summary>
            打印日志核心方法
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="T:Palink.Tools.Extensions.PLLogging.ConsoleLogger">
            <summary>
            ConsoleLogger
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.ConsoleLogger.#ctor(Palink.Tools.Extensions.PLLogging.LoggingLevel)">
            <summary>
            ConsoleLogger
            </summary>
            <param name="minimumLoggingLevel"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.ConsoleLogger.LogCore(Palink.Tools.Extensions.PLLogging.LoggingLevel,System.String)">
            <summary>
            打印日志核心方法
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="T:Palink.Tools.Extensions.PLLogging.LoggingLevel">
            <summary>
            LoggingLevel
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLLogging.LoggingLevel.Trace">
            <summary>
            Trace = 0
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLLogging.LoggingLevel.Debug">
            <summary>
            Debug = 1
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLLogging.LoggingLevel.Information">
            <summary>
            Information = 2
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLLogging.LoggingLevel.Warning">
            <summary>
            Warning = 3
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLLogging.LoggingLevel.Error">
            <summary>
            Error = 4
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLLogging.LoggingLevel.Critical">
            <summary>
            Critical = 5
            </summary>
        </member>
        <member name="T:Palink.Tools.Extensions.PLLogging.IPlLogger">
            <summary>
            IPlLogger
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.IPlLogger.Log(Palink.Tools.Extensions.PLLogging.LoggingLevel,System.String)">
            <summary>
            输出日志
            </summary>
            <param name="level"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.IPlLogger.ShouldLog(Palink.Tools.Extensions.PLLogging.LoggingLevel)">
            <summary>
            日志最低级别
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLLogging.LoggingExtensions">
            <summary>
            日志扩展
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.LoggingExtensions.Trace(Palink.Tools.Extensions.PLLogging.IPlLogger,System.String)">
            <summary>
            Trace
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.LoggingExtensions.Debug(Palink.Tools.Extensions.PLLogging.IPlLogger,System.String)">
            <summary>
            Debug
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.LoggingExtensions.Information(Palink.Tools.Extensions.PLLogging.IPlLogger,System.String)">
            <summary>
            Information
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.LoggingExtensions.Warning(Palink.Tools.Extensions.PLLogging.IPlLogger,System.String)">
            <summary>
            Warning
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.LoggingExtensions.Error(Palink.Tools.Extensions.PLLogging.IPlLogger,System.String)">
            <summary>
            Error
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLLogging.LoggingExtensions.Critical(Palink.Tools.Extensions.PLLogging.IPlLogger,System.String)">
            <summary>
            Critical
            </summary>
            <param name="logger"></param>
            <param name="message"></param>
        </member>
        <member name="T:Palink.Tools.Extensions.PLNet.NetExtensions">
            <summary>
            网络功能扩展
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLNet.NetExtensions.Ping(System.String)">
            <summary>
            Ping
            </summary>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLNet.NewtonsoftHttpClientExtensions">
            <summary>
            Newtonsoft.Json的HttpClient扩展
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLNet.NewtonsoftHttpClientExtensions.GetFromJsonAsync``1(System.Net.Http.HttpClient,System.String,Newtonsoft.Json.JsonSerializerSettings,System.Threading.CancellationToken)">
            <summary>
            GetFromJsonAsync
            </summary>
            <param name="httpClient"></param>
            <param name="uri"></param>
            <param name="settings"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLNet.NewtonsoftHttpClientExtensions.PostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Newtonsoft.Json.JsonSerializerSettings,System.Threading.CancellationToken)">
            <summary>
            PostAsJsonAsync
            </summary>
            <param name="httpClient"></param>
            <param name="uri"></param>
            <param name="value"></param>
            <param name="settings"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Palink.Tools.Extensions.PLNet.NewtonsoftHttpClientExtensions.PutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Newtonsoft.Json.JsonSerializerSettings,System.Threading.CancellationToken)">
            <summary>
            PutAsJsonAsync
            </summary>
            <param name="httpClient"></param>
            <param name="uri"></param>
            <param name="value"></param>
            <param name="settings"></param>
            <param name="cancellationToken"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Palink.Tools.Extensions.PLNet.NewtonsoftHttpClientExtensions.ReadFromJsonAsync``1(System.Net.Http.HttpContent,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            ReadFromJsonAsync
            </summary>
            <param name="content"></param>
            <param name="settings"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Palink.Tools.Extensions.PLObject.ObjectExtensions">
            <summary>
            对象判断扩展类
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.IsPrimitive(System.Type)">
            <summary>
            判断对象是否是原始对象
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.DeepClone(System.Object)">
            <summary>
            深度Clone
            </summary>
            <param name="originalObject"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.DeepClone``1(``0)">
            <summary>
            深度Clone
            </summary>
            <param name="original"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.ReferenceEquals(System.Object,System.Object)">
            <summary>
            严格比较两个对象是否是同一对象(判断引用)
            </summary>
            <param name="this">自己</param>
            <param name="o">需要比较的对象</param>
            <returns>是否同一对象</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.IsDefaultValue(System.Object)">
            <summary>
            是否是默认值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.IsNull(System.Object)">
            <summary>
            判断对象是否为空
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.IsNotNull(System.Object)">
            <summary>
            判断对象是否不为空
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.ThrowIfNull(System.Object)">
            <summary>
            对象为空则抛出异常
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.PropertyDescription(System.Object,System.String)">
            <summary>
            获取属性描述信息
            </summary>
            <param name="object"></param>
            <param name="name">属性名称</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLObject.ObjectExtensions.PropertyDisplayName(System.Object,System.String)">
            <summary>
            获取属性显示名称
            </summary>
            <param name="object"></param>
            <param name="name">属性名称</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLRandom.RandomExtensions">
            <summary>
            随机数扩展
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLRandom.RandomExtensions.StrictNext(System.Random,System.Int32,System.Int32)">
            <summary>
            生成真正的随机数
            </summary>
            <param name="r"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLRandom.RandomExtensions.NextGauss(System.Random,System.Double,System.Double)">
            <summary>
            产生正态分布的随机数
            </summary>
            <param name="rand"></param>
            <param name="mean">均值</param>
            <param name="stdDev">方差</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLReflection.ReflectionExtensions">
            <summary>
            反射扩展
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.Bf">
            <summary>
            BindingFlags
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.InvokeMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="obj">反射对象</param>
            <param name="methodName">方法名，区分大小写</param>
            <param name="args">方法参数</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <param name="obj">反射对象</param>
            <param name="methodName">方法名，区分大小写</param>
            <param name="args">方法参数</param>
            <returns>T类型</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.SetField(System.Object,System.String,System.Object)">
            <summary>
            设置字段
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">字段名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetField``1(System.Object,System.String)">
            <summary>
            获取字段
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">字段名</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetFields(System.Object)">
            <summary>
            获取所有的字段信息
            </summary>
            <param name="obj">反射对象</param>
            <returns>字段信息</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            设置属性
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">属性名</param>
            <param name="value">值</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetProperty``1(System.Object,System.String)">
            <summary>
            获取属性
            </summary>
            <param name="obj">反射对象</param>
            <param name="name">属性名</param>
            <typeparam name="T">约束返回的T必须是引用类型</typeparam>
            <returns>T类型</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetProperties(System.Object)">
            <summary>
            获取所有的属性信息
            </summary>
            <param name="obj">反射对象</param>
            <returns>属性信息</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance(System.Type)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``1(System.Type)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``1(System.String)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance(System.String)">
            <summary>
            获取默认实例
            </summary>
            <param name="type">类型</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``2(System.Type,``0)">
            <summary>
            获取一个构造参数的实例
            </summary>
            <typeparam name="TArg">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``2(System.String,``0)">
            <summary>
            获取一个构造参数的实例
            </summary>
            <typeparam name="TArg">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``3(System.Type,``0,``1)">
            <summary>
            获取2个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``3(System.String,``0,``1)">
            <summary>
            获取2个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``4(System.Type,``0,``1,``2)">
            <summary>
            获取3个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="TArg3">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <param name="argument3">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLReflection.ReflectionExtensions.GetInstance``4(System.String,``0,``1,``2)">
            <summary>
            获取3个构造参数的实例
            </summary>
            <typeparam name="TArg1">参数类型</typeparam>
            <typeparam name="TArg2">参数类型</typeparam>
            <typeparam name="TArg3">参数类型</typeparam>
            <typeparam name="T"></typeparam>
            <param name="type">实例类型</param>
            <param name="argument1">参数值</param>
            <param name="argument2">参数值</param>
            <param name="argument3">参数值</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLSecurity.Encrypt">
            <summary>
            常用的加密解密算法
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLSecurity.Encrypt.DefaultEncryptKey">
            <summary>
            加密密钥，默认取“palink”的MD5值
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesEncrypt(System.String)">
            <summary>
            使用默认加密
            </summary>
            <param name="strText">被加密的字符串</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesDecrypt(System.String)">
            <summary>
            使用默认解密
            </summary>
            <param name="strText">需要解密的 字符串</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesEncrypt(System.String,System.String)">
            <summary> 
            加密字符串
            加密密钥必须为8位
            </summary> 
            <param name="strText">被加密的字符串</param> 
            <param name="strEncryptKey">8位长度密钥</param> 
            <returns>加密后的数据</returns> 
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesEncrypt(System.String,System.Byte[],System.Byte[])">
            <summary> 
            加密字符串
            加密密钥必须为8位
            </summary> 
            <param name="strText">被加密的字符串</param>
            <param name="desKey"></param>
            <param name="desIv"></param>
            <returns>加密后的数据</returns> 
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesEncrypt(System.IO.FileStream,System.String,System.String)">
            <summary>
            DES加密文件
            </summary>
            <param name="fin">文件输入流</param>
            <param name="outFilePath">文件输出路径</param>
            <param name="strEncryptKey">加密密钥</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesEncrypt(System.IO.FileStream,System.String,System.Byte[],System.Byte[])">
            <summary>
            DES加密文件
            </summary>
            <param name="fin">文件输入流</param>
            <param name="outFilePath">文件输出路径</param>
            <param name="desKey"></param>
            <param name="desIv"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesDecrypt(System.IO.FileStream,System.String,System.String)">
            <summary>
            DES解密文件
            </summary>
            <param name="fin">输入文件流</param>
            <param name="outFilePath">文件输出路径</param>
            <param name="decryptKey">解密密钥</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesDecrypt(System.IO.FileStream,System.String,System.Byte[],System.Byte[])">
            <summary>
            DES解密文件
            </summary>
            <param name="fin">输入文件流</param>
            <param name="outFilePath">文件输出路径</param>
            <param name="desKey"></param>
            <param name="desIv"></param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesDecrypt(System.String,System.String)">
            <summary>
            DES解密算法
                密钥为8位
            </summary>
            <param name="pToDecrypt">需要解密的字符串</param>
            <param name="sKey">密钥</param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.DesDecrypt(System.String,System.Byte[],System.Byte[])">
            <summary>
            DES解密算法
            密钥为8位
            </summary>
            <param name="pToDecrypt">需要解密的字符串</param>
            <param name="desKey"></param>
            <param name="desIv"></param>
            <returns>解密后的数据</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String(System.String)">
            <summary>
            对字符串进行MD5加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String2(System.String)">
            <summary>
            对字符串进行MD5二次加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String3(System.String)">
            <summary>
            MD5 三次加密算法
            </summary>
            <param name="s">需要加密的字符串</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String(System.String,System.String)">
            <summary>
            对字符串进行MD5加盐加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <param name="salt">盐</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String2(System.String,System.String)">
            <summary>
            对字符串进行MD5二次加盐加密
            </summary>
            <param name="message">需要加密的字符串</param>
            <param name="salt">盐</param>
            <returns>加密后的结果</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String3(System.String,System.String)">
            <summary>
            MD5三次加密算法
            </summary>
            <param name="s">需要加密的字符串</param>
            <param name="salt">盐</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5File(System.String)">
            <summary>
            获取文件的MD5值
            </summary>
            <param name="fileName">需要求MD5值的文件的文件名及路径</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.Md5String(System.IO.Stream)">
            <summary>
            获取数据流的MD5值
            </summary>
            <param name="stream"></param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.GenerateAesKey(System.Int32)">
            <summary>
            生成符合AES加密规则的密钥
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncrypt(System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="mode">加密模式</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncrypt(System.String,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="encryptKey">加密密钥，须半角字符</param>
            <param name="mode">加密模式</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncrypt(System.String,System.Security.Cryptography.RijndaelManaged)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="options">加密选项</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncrypt(System.String,System.Byte[],System.Security.Cryptography.CipherMode)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="encryptKey">加密密钥，须半角字符</param>
            <param name="mode">加密模式</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecrypt(System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="mode">加密模式</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecrypt(System.String,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,和加密密钥相同</param>
            <param name="mode">加密模式</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecrypt(System.String,System.Security.Cryptography.RijndaelManaged)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="options">加密选项</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecrypt(System.String,System.Byte[],System.Security.Cryptography.CipherMode)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,和加密密钥相同</param>
            <param name="mode">加密模式</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="startIndex">索引位置，以0开始</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncryptStream(System.IO.FileStream,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            加密文件流
            </summary>
            <param name="fs">需要加密的文件流</param>
            <param name="decryptKey">加密密钥</param>
            <param name="mode">加密模式</param>
            <returns>加密流</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncryptStream(System.IO.FileStream,System.Byte[],System.Security.Cryptography.CipherMode)">
            <summary>
            加密文件流
            </summary>
            <param name="fs">需要加密的文件流</param>
            <param name="decryptKey">加密密钥</param>
            <param name="mode">加密模式</param>
            <returns>加密流</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecryptStream(System.IO.FileStream,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            解密文件流
            </summary>
            <param name="fs">需要解密的文件流</param>
            <param name="decryptKey">解密密钥</param>
            <param name="mode">加密模式</param>
            <returns>加密流</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecryptStream(System.IO.FileStream,System.Byte[],System.Security.Cryptography.CipherMode)">
            <summary>
            解密文件流
            </summary>
            <param name="fs">需要解密的文件流</param>
            <param name="decryptKey">解密密钥</param>
            <param name="mode">加密模式</param>
            <returns>加密流</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesEncryptFile(System.IO.FileStream,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            对指定文件AES加密
            </summary>
            <param name="input">源文件流</param>
            <param name="mode">加密模式</param>
            <param name="outputPath">输出文件路径</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.Encrypt.AesDecryptFile(System.IO.FileStream,System.String,System.Security.Cryptography.CipherMode)">
            <summary>
            对指定的文件AES解密
            </summary>
            <param name="input">源文件流</param>
            <param name="mode">加密模式</param>
            <param name="outputPath">输出文件路径</param>
        </member>
        <member name="T:Palink.Tools.Extensions.PLSecurity.EncryptExtensions">
            <summary>
            EncryptExtensions
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.EncodeBase64String(System.String,System.String)">
            <summary>
            将字符串使用base64算法编码 
            </summary>
            <param name="encodingName">编码类型（编码名称）</param>
            <param name="inputStr">待加密的字符串</param>
            <returns>加密后的字符串</returns> 
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.DecodeBase64String(System.String,System.String)">
            <summary> 
            将字符串使用base64算法解码
            </summary> 
            <param name="encodingName">编码类型</param> 
            <param name="base64String">已用base64算法加密的字符串</param> 
            <returns>解密后的字符串</returns> 
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.EncodeMd5String(System.String)">
            <summary>
            将字符串使用MD5算法加密
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.EncodeSha1String(System.String)">
            <summary>
            将字符串使用SHA1算法加密
            </summary>
            <param name="inputStr">明文</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.EncodeSha256String(System.String)">
            <summary>
            将字符串使用SHA256算法加密
            </summary>
            <param name="inputStr">明文</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.EncodeSha384String(System.String)">
            <summary>
            将字符串使用SHA384算法加密
            </summary>
            <param name="inputStr">明文</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.EncryptExtensions.EncodeSha512String(System.String)">
            <summary>
            将字符串使用SHA512算法加密
            </summary>
            <param name="inputStr">明文</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLSecurity.HashEncode">
            <summary>
            得到随机安全码（哈希加密）。
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.HashEncode.HashSecurity(System.Random)">
            <summary>
            得到随机哈希加密字符串
            </summary>
            <returns>随机哈希加密字符串</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSecurity.HashEncode.HashEncoding(System.String)">
            <summary>
            哈希加密一个字符串
            </summary>
            <param name="security">需要加密的字符串</param>
            <returns>加密后的数据</returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLSerialize.SerializeExtensions">
            <summary>
            实体序列化扩展
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSerialize.SerializeExtensions.ToJson(System.Object,System.Boolean)">
            <summary>
            实体对象转JSON字符串
            </summary>
            <param name="obj"></param>
            <param name="ignoreNull"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSerialize.SerializeExtensions.FromJson``1(System.String)">
            <summary>
            JSON字符串转实体对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="jsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSerialize.SerializeExtensions.SerializeUtf8(System.String)">
            <summary>
            字符串序列化成字节序列
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSerialize.SerializeExtensions.DeserializeUtf8(System.Byte[])">
            <summary>
            字节序列序列化成字符串
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLSerialize.SerializeExtensions.FromJsonFile``1(System.String,System.String)">
            <summary>
            根据key将json文件内容转换为指定对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLString.StringExtensions">
            <summary>
            字符判断扩展类
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            字符串为空或空字符
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
            字符串为空或只包含空格
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsNotNullOrEmpty(System.String)">
            <summary>
            字符串非空且非空字符
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsNotNullOrWhiteSpace(System.String)">
            <summary>
            字符串非空且不包含空格
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsChinese(System.String)">
            <summary>
            是否中文
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsEmail(System.String)">
            <summary>
            是否为邮箱名
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsMobile(System.String)">
            <summary>
            是否为手机号
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsPhone(System.String)">
            <summary>
            是否为固话号
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsIp(System.String)">
            <summary>
            是否为IP
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsIdCard(System.String)">
            <summary>
            是否是身份证号
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsDate(System.String)">
            <summary>
            是否为日期
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsNumeric(System.String)">
            <summary>
            是否是数值(包括整数和小数)
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsZipCode(System.String)">
            <summary>
            是否为邮政编码
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.IsImgFileName(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            是否是图片文件名
            </summary>
            <param name="fileName"></param>
            <param name="fileExtensions">图像文件扩展名</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.Sub(System.String,System.Int32)">
            <summary>
            Sub
            </summary>
            <param name="inputStr"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.TryReplace(System.String,System.String,System.String)">
            <summary>
            TryReplace
            </summary>
            <param name="inputStr"></param>
            <param name="oldStr"></param>
            <param name="newStr"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.RegexReplace(System.String,System.String,System.String)">
            <summary>
            RegexReplace
            </summary>
            <param name="inputStr"></param>
            <param name="pattern"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.Format(System.String,System.Object,System.Object)">
            <summary>
            Format
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.Format(System.String,System.Object[])">
            <summary>
            Format
            </summary>
            <param name="format"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.Format(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Format
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.Format(System.String,System.Object)">
            <summary>
            Format
            </summary>
            <param name="format"></param>
            <param name="arg0"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            FormatWith
            </summary>
            <param name="this"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.FormatWith(System.String,System.Object,System.Object,System.Object)">
            <summary>
            FormatWith
            </summary>
            <param name="this"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.FormatWith(System.String,System.Object,System.Object)">
            <summary>
            FormatWith
            </summary>
            <param name="this"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.FormatWith(System.String,System.Object)">
            <summary>
            FormatWith
            </summary>
            <param name="this"></param>
            <param name="arg0"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLString.StringExtensions.Mask(System.String,System.Char)">
            <summary>
            字符串掩码
            </summary>
            <param name="s">字符串</param>
            <param name="mask">掩码符</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLTime.DateTimeExtensions">
            <summary>
            DateTimeExtensions
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekAmount(System.DateTime,System.Int32)">
            <summary>
            获取某一年有多少周
            </summary>
            <param name="_"></param>
            <param name="year">年份</param>
            <returns>该年周数</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.WeekOfYear(System.DateTime@)">
            <summary>
            返回年度第几个星期   默认星期日是第一天
            </summary>
            <param name="date">时间</param>
            <returns>第几周</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.WeekOfYear(System.DateTime@,System.DayOfWeek)">
            <summary>
            返回年度第几个星期
            </summary>
            <param name="date">时间</param>
            <param name="week">一周的开始日期</param>
            <returns>第几周</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekTime(System.DateTime,System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            得到一年中的某周的起始日和截止日
            年 nYear
            周数 nNumWeek
            周始 out dtWeekStart
            周终 out dtWeekEnd
            </summary>
            <param name="_"></param>
            <param name="nYear">年份</param>
            <param name="nNumWeek">第几周</param>
            <param name="dtWeekStart">开始日期</param>
            <param name="dtWeekEnd">结束日期</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekWorkTime(System.DateTime,System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            得到一年中的某周的起始日和截止日    周一到周五  工作日
            </summary>
            <param name="_"></param>
            <param name="nYear">年份</param>
            <param name="nNumWeek">第几周</param>
            <param name="dtWeekStart">开始日期</param>
            <param name="dtWeekEnd">结束日期</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.SetLocalTime(System.DateTime@)">
            <summary>
            设置本地计算机系统时间，仅支持Windows系统
            </summary>
            <param name="dt">DateTime对象</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDateTime(System.DateTime@,System.Int32)">
            <summary>
            返回相对于当前时间的相对天数
            </summary>
            <param name="dt"></param>
            <param name="relativeDay">相对天数</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDateTimeF(System.DateTime@)">
            <summary>
            返回标准时间格式string
            </summary>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalSeconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的秒数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalMilliseconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的毫秒数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalMicroseconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的微秒时间戳
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalNanoseconds(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的纳秒时间戳
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalMinutes(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的分钟数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalHours(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的小时数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTotalDays(System.DateTime@)">
            <summary>
            获取该时间相对于1970-01-01T00:00:00Z的天数
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDaysOfYear(System.DateTime,System.Int32)">
            <summary>
            返回本年有多少天
            </summary>
            <param name="_"></param>
            <param name="iYear">年份</param>
            <returns>本年的天数</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDaysOfYear(System.DateTime@)">
            <summary>本年有多少天</summary>
            <param name="dt">日期</param>
            <returns>本天在当年的天数</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDaysOfMonth(System.DateTime,System.Int32,System.Int32)">
            <summary>本月有多少天</summary>
            <param name="_"></param>
            <param name="iYear">年</param>
            <param name="month">月</param>
            <returns>天数</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDaysOfMonth(System.DateTime@)">
            <summary>本月有多少天</summary>
            <param name="dt">日期</param>
            <returns>天数</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekNameOfDay(System.DateTime@)">
            <summary>返回当前日期的星期名称</summary>
            <param name="idt">日期</param>
            <returns>星期名称</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsLeapYear(System.Int32)">
            <summary>判断当前年份是否是闰年，私有函数</summary>
            <param name="iYear">年份</param>
            <returns>是闰年：True ，不是闰年：False</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsDateTime(System.String)">
            <summary>
            判断是否为合法日期，必须大于1800年1月1日
            </summary>
            <param name="strDate">输入日期字符串</param>
            <returns>True/False</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.In(System.DateTime@,System.DateTime,System.DateTime,Palink.Tools.Extensions.PLTime.RangeMode)">
            <summary>
            判断时间是否在区间内
            </summary>
            <param name="this"></param>
            <param name="start">开始</param>
            <param name="end">结束</param>
            <param name="mode">模式</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.ReturnDateFormat(System.DateTime,System.Int32,System.String@,System.String@)">
            <summary>
             返回每月的第一天和最后一天
            </summary>
            <param name="_"></param>
            <param name="month">月份</param>
            <param name="firstDay">第一天</param>
            <param name="lastDay">最后一天</param>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetMonthLastDate(System.DateTime,System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="_"></param>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetTimeDelay(System.DateTime@,System.DateTime)">
            <summary>
            获得一段时间内有多少小时
            </summary>
            <param name="dtStar">起始时间</param>
            <param name="dtEnd">终止时间</param>
            <returns>小时差</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDateString(System.DateTime@)">
            <summary>
            获得8位时间整型数字
            </summary>
            <param name="dt">当前的日期时间对象</param>
            <returns>8位时间整型数字</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.DateDiff(System.DateTime@,System.DateTime@)">
            <summary>
            返回时间差
            </summary>
            <param name="dateTime1">时间1</param>
            <param name="dateTime2">时间2</param>
            <returns>时间差</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDiffTime(System.DateTime@,System.DateTime@)">
            <summary>
            计算2个时间差
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>时间差</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.BeijingTimeToUnixTimeStamp10(System.DateTime)">
            <summary>
            北京时间转换成unix时间戳(10位/秒)
            Unix 时间戳是从1970年1月1日（UTC/GMT的午夜）开始所经过的秒数，不考虑闰秒
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.UtcTimeToUnixTimeStamp10(System.DateTime)">
            <summary>
            格林威治时间转换成unix时间戳(10位/秒)
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.BeijingTimeToUnixTimeStamp13(System.DateTime)">
            <summary>
            北京时间转换成unix时间戳(13位/毫秒)
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.UtcTimeToUnixTimeStamp13(System.DateTime)">
            <summary>
            格林威治时间转换成unix时间戳(13位/毫秒)
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.UnixTimeStamp10ToBeijingTime(System.Int64)">
            <summary>
            10位unix时间戳转换成北京时间
            </summary>
            <param name="unixTimeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.UnixTimeStamp10ToUtcTime(System.Int64)">
            <summary>
            10位unix时间戳转换成格林威治
            </summary>
            <param name="unixTimeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.UnixTimeStamp13ToBeijingTime(System.Int64)">
            <summary>
            13位unix时间戳转换成北京时间
            </summary>
            <param name="unixTimeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.UnixTimeStamp13ToUtcTime(System.Int64)">
            <summary>
            13位unix时间戳转换成格林威治
            </summary>
            <param name="unixTimeStamp"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDayStart(System.DateTime)">
            <summary>
            获取本日开始时间（0点0分0秒）
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDayEnd(System.DateTime)">
            <summary>
            获取本日结束时间（23点59分59秒）
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekStart(System.DateTime)">
            <summary>
            获取本周开始时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekEnd(System.DateTime)">
            <summary>
            获取本周结束时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetMonthStart(System.DateTime)">
            <summary>
            获取本月开始时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetMonthEnd(System.DateTime)">
            <summary>
            获取本月结束时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetSeasonStart(System.DateTime)">
            <summary>
            获取本季度开始时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetSeasonEnd(System.DateTime)">
            <summary>
            获取本季度结束时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetYearStart(System.DateTime)">
            <summary>
            获取本年开始时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetYearEnd(System.DateTime)">
            <summary>
            获取本年结束时间
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetFirstWeekDayOfMonth(System.DateTime,System.DayOfWeek)">
            <summary>
            当前日期所在月份第一个指定星期几的日期
            </summary>
            <param name="date">给定日期</param>
            <param name="dayOfWeek">星期几</param>
            <returns>所对应的日期</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetLastWeekDayOfMonth(System.DateTime,System.DayOfWeek)">
            <summary>
            当前日期所在月份最后1个指定星期几的日期
            </summary>
            <param name="date">给定日期</param>
            <param name="dayOfWeek">星期几</param>
            <returns>所对应的日期</returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsBefore(System.DateTime,System.DateTime)">
            <summary>
            判断是否比指定之间早
            </summary>
            <param name="date"></param>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsAfter(System.DateTime,System.DateTime)">
            <summary>
            判断是否比指定时间晚
            </summary>
            <param name="date"></param>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetCountDaysOfMonth(System.DateTime)">
            <summary>
            给定日期所在月份共有多少天
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsDateEqual(System.DateTime,System.DateTime)">
            <summary>
            当前日期与给定日期是否是同一天
            </summary>
            <param name="date">当前日期</param>
            <param name="dateToCompare">给定日期</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsWeekend(System.DateTime)">
            <summary>
            是否是周未
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsWeekDay(System.DateTime)">
            <summary>
            是否是工作日
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsToday(System.DateTime)">
            <summary>
            判断是否为今天
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.IsLeap(System.DateTime)">
            <summary>
            判定公历闰年遵循的一般规律为：四年一闰，百年不闰，四百年再闰。
            公历闰年的精确计算方法：（按一回归年365天5小时48分45.5秒）
            普通年能被4整除而不能被100整除的为闰年。 （如2004年就是闰年，1900年不是闰年）
            世纪年能被400整除而不能被3200整除的为闰年。 (如2000年是闰年，3200年不是闰年)
            对于数值很大的年份能整除3200,但同时又能整除172800则又是闰年。(如172800年是闰年，86400年不是闰年）
            公元前闰年规则如下：
            非整百年：年数除4余数为1是闰年，即公元前1、5、9……年；
            整百年：年数除400余数为1是闰年，年数除3200余数为1，不是闰年,年数除172800余1又为闰年，即公元前401、801……年。
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetDaysByYear(System.DateTime)">
            <summary>
            获取当前年天数
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Extensions.PLTime.DateTimeExtensions.GetWeekCountByYear(System.DateTime)">
            <summary>
            获取当前年天数
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.Extensions.PLTime.RangeMode">
            <summary>
            区间模式
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLTime.RangeMode.Open">
            <summary>
            开区间
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLTime.RangeMode.Close">
            <summary>
            闭区间
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLTime.RangeMode.OpenClose">
            <summary>
            左开右闭区间
            </summary>
        </member>
        <member name="F:Palink.Tools.Extensions.PLTime.RangeMode.CloseOpen">
            <summary>
            左闭右开区间
            </summary>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.Ecm.EcmMessage">
            <summary>
            EcmMessage
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Ecm.EcmMessage.BeatsInstance(System.String)">
            <summary>
            心跳实例
            </summary>
            <param name="no">展品编号</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Ecm.EcmMessage.InteractionInstance(System.String,System.TimeSpan)">
            <summary>
            互动实例
            </summary>
            <param name="no">展品编号</param>
            <param name="eTime">消息有效时长</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Ecm.EcmMessage.MonitorInstance(System.String,System.String,System.String,System.TimeSpan,Palink.Tools.PanShi.Monitor.MessageTag)">
            <summary>
            监控实例
            </summary>
            <param name="no">展品编号</param>
            <param name="content">消息内容</param>
            <param name="type">消息类型M或E</param>
            <param name="eTime">消息有效时长</param>
            <param name="tag">消息类型，不同类型对应不同策略</param>
            <returns></returns>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Ecm.EcmMessage.Name">
            <summary>
            展品编号
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Ecm.EcmMessage.CmdType">
            <summary>
            命令类型
            </summary>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.Ecm.EcmService">
            <summary>
            云监控服务
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Ecm.EcmService.ExhibitNo">
            <summary>
            展品编号
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Ecm.EcmService.Url">
            <summary>
            服务器URL
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Ecm.EcmService.#ctor(System.Double,System.String,System.String,System.String)">
            <summary>
            EcmService构造器
            </summary>
            <param name="minDelay">心跳间隔，单位分钟</param>
            <param name="exhibitNo">展品编号</param>
            <param name="url">服务器地址</param>
            <param name="cacheAppId">缓存位置唯一标识</param>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Ecm.EcmService.AddMessage(Palink.Tools.PanShi.Monitor.Ecm.EcmMessage)">
            <summary>
            向消息队列添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.Ecm.CmdType">
            <summary>
            命令类型
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.Ecm.CmdType.Beats">
            <summary>
            心跳
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.Ecm.CmdType.Monitor">
            <summary>
            监控
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.Ecm.CmdType.Interaction">
            <summary>
            互动
            </summary>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.Ecm.EcmTransferStation">
            <summary>
            EcmTransferStation
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Ecm.EcmTransferStation.SendDataToEcm(Palink.Tools.PanShi.Monitor.Ecm.EcmMessage,System.String,System.Boolean)">
            <summary>
            发送数据
            </summary>
            <param name="msg">消息体</param>
            <param name="url">服务器地址</param>
            <param name="wait">是否等待服务器返回值</param>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.MessageTag">
            <summary>
            消息标签
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.MessageTag.Once">
            <summary>
            只发送一次
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.MessageTag.Needed">
            <summary>
            直到发送成功为止，无论之前是否发送过
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.MessageTag.AutoExpire">
            <summary>
            只发送一次，过期时间内不重复发送
            </summary>
        </member>
        <member name="F:Palink.Tools.PanShi.Monitor.MessageTag.AutoExpireNeeded">
            <summary>
            直到发送成功为止，过期时间内不重复发送
            </summary>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.Message">
            <summary>
            继承此类子类使用CreateMessage方法构造，该方法4个参数必须存在
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.Id">
            <summary>
            消息唯一标识
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.InfoType">
            <summary>
            信息类型 E、M
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.InfoCode">
            <summary>
            信息代码000-999
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.InfoContent">
            <summary>
            信息内容
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.ETime">
            <summary>
            消息有效时长
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.Tag">
            <summary>
            消息标签
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.SendSucceed">
            <summary>
            是否发送成功
            </summary>
        </member>
        <member name="P:Palink.Tools.PanShi.Monitor.Message.Url">
            <summary>
            将消息发送到服务器的URL地址
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Message.GetTag">
            <summary>
            获取当前消息缓存的标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.Message.SetupExpirationTime(System.TimeSpan)">
            <summary>
            设置消息过期时间,不设置默认为30s
            </summary>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.PostCacheService`1">
            <summary>
            CachePostService
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.PostCacheService`1.#ctor(System.String)">
            <summary>
            EcmService构造器
            </summary>
            <param name="cacheAppId">缓存位置唯一标识</param>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.PostCacheService`1.AddMessage(`0)">
            <summary>
            向消息队列添加新消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Palink.Tools.PanShi.Monitor.TransferStation">
            <summary>
            TransferStation
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Monitor.TransferStation.PostJsonToServer``1(``0,System.Boolean)">
            <summary>
            发送数据
            </summary>
            <param name="msg">消息体</param>
            <param name="wait">是否等待服务器返回值</param>
        </member>
        <member name="T:Palink.Tools.PanShi.Robots.EpsonMaster">
            <summary>
            EpsonMaster
            </summary>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.#ctor(Palink.Tools.Communication.Interface.IStreamResource,Palink.Tools.Extensions.PLLogging.IPlLogger)">
            <summary>
            Master
            </summary>
            <param name="streamResource"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.CheckData(Palink.Tools.Communication.Interface.IMessage)">
            <summary>
            数据校验
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.CreateFrame(System.ValueTuple{System.Byte,System.Byte,System.Byte[]})">
            <summary>
            创建发送数据体
            </summary>
            <param name="noCheckFrame"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.CreateStringFrame(System.String)">
            <summary>
            创建字符串发送数据体
            </summary>
            <param name="frame"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Login(System.String)">
            <summary>
            机器人登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.LoginAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            机器人登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Logout">
            <summary>
            机器人退出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.LogoutAsync(System.Threading.CancellationToken)">
            <summary>
            机器人退出
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.GetStatus">
            <summary>
            获取机器人状态
            返回#GetStatus, aaaaaaaaaaa, bbbb
            10位数字“aaaaaaaaaa”是用于下列10 个标志的 Test/Teach/Auto/Warning/SError/Safeguard/EStop/Error/Paused/Running/Ready
            1 为开/0 为关,如果Teach 和Auto 为开，则其为1100000000
            Test 在TEST模式下打开
            Teach 在TEACH模式下打开
            Auto 在远程输入接受条件下打开       
            Warning在警告条件下打开甚至在警告条件下也可以像往常一样执行任务。然而，应尽快采取警告行动。
            SError在严重错误状态下打开发生严重错误时，重新启动控制器从错误状态中恢复过来。“Reset输入”不可用。
            Safeguard 安全门打开时打开
            EStop 在紧急状态下打开
            Error 在错误状态下打开使用“Reset输入”从错误状态中恢复。
            Paused 打开暂停的任务
            Running执行任务时打开在“Paused输出”为开时关闭。
            Ready 控制器完成启动且无任务执行时打开
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.GetStatusAsync(System.Threading.CancellationToken)">
            <summary>
            获取机器人状态
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Start(System.Int32,System.Boolean,System.Int32)">
            <summary>
            执行Main程序
            </summary>
            <param name="id"></param>
            <param name="wait">是否等待数据返回</param>
            <param name="waitTime">等待时间，Start命令必须等待机器人任务完全结束才有返回</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.StartAsync(System.Int32,System.Threading.CancellationToken,System.Boolean,System.Int32)">
            <summary>
            执行Main程序
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <param name="wait">是否等待数据返回</param>
            <param name="waitTime">等待时间，Start命令必须等待机器人任务完全结束才有返回</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Reset">
            <summary>
            重置机器人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.ResetAsync(System.Threading.CancellationToken)">
            <summary>
            重置机器人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Stop">
            <summary>
            停止机器人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.StopAsync(System.Threading.CancellationToken)">
            <summary>
            停止机器人
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.SetMotorsOn(System.Int32)">
            <summary>
            机器人使能
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.SetMotorsOnAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            机器人使能
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.SetMotorsOff(System.Int32)">
            <summary>
            机器人下使能
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.SetMotorsOffAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            机器人下使能
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Home(System.Int32)">
            <summary>
            机器人回零
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.HomeAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            机器人回零
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.GetIO(System.Int32)">
            <summary>
            读取IO
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.GetIOAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            读取IO
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.SetIO(System.Int32,System.Boolean)">
            <summary>
            设置IO
            </summary>
            <param name="id"></param>
            <param name="open"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.SetIOAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            设置IO
            </summary>
            <param name="id"></param>
            <param name="open"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.Execute(System.String,System.Boolean,System.Int32)">
            <summary>
            执行SPEL程序
            </summary>
            <param name="cmd">执行SPEL+语言命令，命令需要用引号</param>
            <param name="wait">是否等待数据返回</param>
            <param name="waitTime">等待时间，Start命令必须等待机器人任务完全结束才有返回</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.PanShi.Robots.EpsonMaster.ExecuteAsync(System.String,System.Threading.CancellationToken,System.Boolean,System.Int32)">
            <summary>
            执行SPEL程序
            </summary>
            <param name="cmd">执行SPEL+语言命令，命令需要用引号</param>
            <param name="token"></param>
            <param name="wait">是否等待数据返回</param>
            <param name="waitTime">等待时间，Start命令必须等待机器人任务完全结束才有返回</param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.Mime.ContentType">
            <summary>
            默认MIME映射器，可以根据文件扩展名获取标准内容类型。
            </summary>
        </member>
        <member name="F:Palink.Tools.System.Mime.ContentType.DefaultMime">
            <summary>
            默认Mime  - 如果没有找到任何其他映射则作为默认的Mime-Type
            </summary>
        </member>
        <member name="T:Palink.Tools.System.Mime.DefaultMimeItems">
            <summary>
            DefaultMimeItems
            </summary>
        </member>
        <member name="F:Palink.Tools.System.Mime.DefaultMimeItems.Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="T:Palink.Tools.System.Mime.IMimeMapper">
            <summary>
            IMimeMapper
            </summary>
        </member>
        <member name="M:Palink.Tools.System.Mime.IMimeMapper.Extend(Palink.Tools.System.Mime.MimeMappingItem[])">
            <summary>
            扩展Mime
            </summary>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.Mime.IMimeMapper.GetMimeFromExtension(System.String)">
            <summary>
            根据扩展名获取mime type
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.Mime.IMimeMapper.GetMimeFromPath(System.String)">
            <summary>
            根据路径获取Mime Type
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.Mime.MimeMapper">
            <summary>
            默认MIME映射器，可以根据文件扩展名获取标准内容类型。
            </summary>
        </member>
        <member name="F:Palink.Tools.System.Mime.MimeMapper.DefaultMime">
            <summary>
            默认Mime  - 如果没有找到任何其他映射则作为默认的Mime-Type
            </summary>
        </member>
        <member name="F:Palink.Tools.System.Mime.MimeMapper._pathExtensionPattern">
            <summary>
            在文件路径中搜索文件扩展名的默认正则表达式
            </summary>
        </member>
        <member name="P:Palink.Tools.System.Mime.MimeMapper.MimeTypes">
            <summary>
            Mime类型与扩展名的映射字典(扩展名:mimetype)
            </summary>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.#cctor">
            <summary>
            mime类型与扩展名的映射关系(mimetype:扩展名)
            </summary>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.#ctor(Palink.Tools.System.Mime.MimeMappingItem[])">
            <summary>
            
            </summary>
            <param name="extensions"></param>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.Extend(Palink.Tools.System.Mime.MimeMappingItem[])">
            <summary>
            扩展mime映射规则的标准列表。扩展的具有更高的优先级 - 如果扩展具有与标准项相同的扩展名，则会覆盖默认的mime
            </summary>
            <param name="extensions"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.GetMimeFromExtension(System.String)">
            <summary>
            返回特定文件扩展名的Content-Type，如果未找到任何对应关系，则返回默认值
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.GetExtensionFromMime(System.String)">
            <summary>
            返回特定Content-Type的文件扩展名，如果未找到任何对应关系，则返回空值
            </summary>
            <param name="mime"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.GetMimeFromPath(System.String)">
            <summary>
            根据路径获取MimeType
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.Mime.MimeMapper.GetExtension(System.String)">
            <summary>
            获取扩展名
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.Mime.MimeMappingItem">
            <summary>
            MimeMappingItem
            </summary>
        </member>
        <member name="P:Palink.Tools.System.Mime.MimeMappingItem.Extension">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="P:Palink.Tools.System.Mime.MimeMappingItem.MimeType">
            <summary>
            MimeType
            </summary>
        </member>
        <member name="T:Palink.Tools.System.PLAttribute.JsonOcrAttribute">
            <summary>
            json序列化属性，区分与读取的数据与发送的数据序列化时的属性名称
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLAttribute.JsonOcrAttribute.ReadName">
            <summary>
            读取名称
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLAttribute.JsonOcrAttribute.WriteName">
            <summary>
            写入名称
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLAttribute.JsonOcrAttribute.Readable">
            <summary>
            是否可读
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLAttribute.JsonOcrAttribute.Writable">
            <summary>
            是否可写
            </summary>
        </member>
        <member name="T:Palink.Tools.System.PLAttribute.JsonOcrWriteResolver">
            <summary>
            使用WriteName进行Json序列化
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLAttribute.JsonOcrWriteResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            CreateProperty
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.PLAttribute.JsonOcrReadResolver">
            <summary>
            使用ReadName进行Json序列化
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLAttribute.JsonOcrReadResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            CreateProperty
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.Banana">
            <summary>
            Data object for Barrel
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.Banana.Id">
            <summary>
            Unique Identifier
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.Banana.ETag">
            <summary>
            Additional ETag to set for Http Caching
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.Banana.Contents">
            <summary>
            Main Contents.
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.Banana.ExpirationDate">
            <summary>
            Expiration data of the object, stored in UTC
            </summary>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.BarrelUtils">
            <summary>
            Barrel Utils
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.BarrelUtils.SetBaseCachePath(System.String)">
            <summary>
            Sets the base path to use. This can only be set once and before using the Barrel
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.BarrelUtils.GetExpiration(System.TimeSpan)">
            <summary>
            Gets the expiration from a timespan
            </summary>
            <param name="timeSpan"></param>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.CacheState">
            <summary>
            Current state of the item in the cache.
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLCaching.MonkeyCache.CacheState.None">
            <summary>
            An unknown state for the cache item
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLCaching.MonkeyCache.CacheState.Expired">
            <summary>
            Expired cache item
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLCaching.MonkeyCache.CacheState.Active">
            <summary>
            Active non-expired cache item
            </summary>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel">
            <summary>
            文件缓存
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.#ctor(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            FileStore Barrel constructor
            </summary>
            <param name="cacheDirectory">Optionally specify directory where cache will live</param>
            <param name="hash">Optionally specify hash algorithm</param>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.ApplicationId">
            <summary>
            路径标识，与基础路径一起合成完整路径
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.AutoExpire">
            <summary>
            AutoExpire
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Current">
            <summary>
            Gets the instance of the Barrel
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Create(System.String,System.Security.Cryptography.HashAlgorithm)">
            <summary>
            FileStore Barrel
            </summary>
            <param name="cacheDirectory">Optionally specify directory where cache will live</param>
            <param name="hash">Optionally specify hash algorithm</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Add(System.String,System.String,System.TimeSpan,System.String)">
            <summary>
            Adds an entry to the barrel
            </summary>
            <param name="key">Unique identifier for the entry</param>
            <param name="data">Data object to store</param>
            <param name="expireIn">Time from UtcNow to expire entry in</param>
            <param name="eTag">Optional eTag information</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Add``1(System.String,``0,System.TimeSpan,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Adds an entry to the barrel
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">Unique identifier for the entry</param>
            <param name="data">Data object to store</param>
            <param name="expireIn">Time from UtcNow to expire entry in</param>
            <param name="eTag">Optional eTag information</param>
            <param name="jsonSerializationSettings">Custom json serialization settings to use</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Empty(System.String[])">
            <summary>
            Empties all specified entries regardless if they are expired.
            Throws an exception if any deletions fail and rolls back changes.
            </summary>
            <param name="key">keys to empty</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.EmptyAll">
            <summary>
            Empties all expired entries that are in the Barrel.
            Throws an exception if any deletions fail and rolls back changes.
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.EmptyExpired">
            <summary>
            Empties all expired entries that are in the Barrel.
            Throws an exception if any deletions fail and rolls back changes.
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Exists(System.String)">
            <summary>
            Checks to see if the key exists in the Barrel.
            </summary>
            <param name="key">Unique identifier for the entry to check</param>
            <returns>If the key exists</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.GetKeys(Palink.Tools.System.PLCaching.MonkeyCache.CacheState)">
            <summary>
            Gets all the keys that are saved in the cache
            </summary>
            <returns>The IEnumerable of keys</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.GetKeys(System.String,Palink.Tools.System.PLCaching.MonkeyCache.CacheState)">
            <summary>
            根据缓存状态和标签值获取缓存
            </summary>
            <param name="eTag">标签名称</param>
            <param name="state">State to get: Multiple with flags: CacheState.Active | CacheState.Expired</param>
            <returns>The keys</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.Get``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Gets the data entry for the specified key.
            </summary>
            <param name="key">Unique identifier for the entry to get</param>
            <param name="jsonSerializationSettings">Custom json serialization settings to use</param>
            <returns>The data object that was stored if found, else default(T)</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.GetExpiration(System.String)">
            <summary>
            Gets the DateTime that the item will expire for the specified key.
            </summary>
            <param name="key">Unique identifier for entry to get</param>
            <returns>The expiration date if the key is found, else null</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.GetETag(System.String)">
            <summary>
            Gets the ETag for the specified key.
            </summary>
            <param name="key">Unique identifier for entry to get</param>
            <returns>The ETag if the key is found, else null</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.FileStore.Barrel.IsExpired(System.String)">
            <summary>
            Checks to see if the entry for the key is expired.
            </summary>
            <param name="key">Key to check</param>
            <returns>If the expiration data has been met</returns>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.HttpCache">
            <summary>
            Http cache utilities!
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.HttpCache.Current">
            <summary>
            Gets the instance of the HttpCache
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.HttpCache.GetCachedAsync(Palink.Tools.System.PLCaching.MonkeyCache.IBarrel,System.String,System.TimeSpan,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Get a cahced item via web request.
            </summary>
            <param name="barrel">Barrel to use for cache</param>
            <param name="url">Url to query</param>
            <param name="timeout">Timeout to use</param>
            <param name="expireIn">Set the item to expire in</param>
            <param name="forceUpdate">Force an update from the server</param>
            <param name="throttled">If the request should be throttled</param>
            <returns>The cached or new active item.</returns>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.HttpCacheExtensions">
            <summary>
            Http cache extension helpers
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.HttpCacheExtensions.SendCachedAsync(System.Net.Http.HttpClient,Palink.Tools.System.PLCaching.MonkeyCache.IBarrel,System.Net.Http.HttpRequestMessage,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Send a cached requests
            </summary>
            <param name="http">Http client ot use</param>
            <param name="barrel">Barrel to use for cache</param>
            <param name="req">request to send</param>
            <param name="expireIn">expire in</param>
            <param name="forceUpdate">If we should force the update or not</param>
            <param name="throttled">If throttled or not</param>
            <returns>The new or cached response.</returns>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.HttpCacheRequestException">
            <summary>
            Http request exception
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.HttpCacheRequestException.#ctor(System.Net.HttpStatusCode,System.String)">
            <summary>
            Constructor for cache exception
            </summary>
            <param name="statusCode">The code</param>
            <param name="message">Message</param>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.HttpCacheRequestException.StatusCode">
            <summary>
            Status code
            </summary>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel">
            <summary>
            Interface for a barrel of cache
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.AutoExpire">
            <summary>
            Enable / Disable auto expiring of items in the barrel
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.Add``1(System.String,``0,System.TimeSpan,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Add an item to the barrel
            </summary>
            <typeparam name="T">Type of item</typeparam>
            <param name="key">Key to use</param>
            <param name="data">Data to store of type T</param>
            <param name="expireIn">How long in the future the item should expire</param>
            <param name="eTag">eTag to use if needed</param>
            <param name="jsonSerializationSettings">Specific json serialization to use</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.Empty(System.String[])">
            <summary>
            Empty a set of keys
            </summary>
            <param name="key">Keys to empty</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.EmptyAll">
            <summary>
            Empty all items from the barrel
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.EmptyExpired">
            <summary>
            Empty only expired items from the barrel
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.Exists(System.String)">
            <summary>
            Checks to see if a key exists in the barrel
            </summary>
            <param name="key">Key to check</param>
            <returns>True if the key exists, else false</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.GetKeys(Palink.Tools.System.PLCaching.MonkeyCache.CacheState)">
            <summary>
            Gets keys with specified state
            </summary>
            <param name="state">State to get: Multiple with flags: CacheState.Active | CacheState.Expired</param>
            <returns>The keys</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.GetKeys(System.String,Palink.Tools.System.PLCaching.MonkeyCache.CacheState)">
            <summary>
            根据缓存状态和标签值获取缓存
            </summary>
            <param name="eTag">标签名称</param>
            <param name="state">State to get: Multiple with flags: CacheState.Active | CacheState.Expired</param>
            <returns>The keys</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.Get``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Get an object for the key
            </summary>
            <typeparam name="T">Type of object to get</typeparam>
            <param name="key">Key to use</param>
            <param name="jsonSettings">json serialization settings to use.</param>
            <returns>The object back if it exists, else null</returns>
            <remarks>
            When AutoExpire is set to true, Get<T> will return NULL if the item is expired</T>
            </remarks>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.GetETag(System.String)">
            <summary>
            Get the eTag for a key
            </summary>
            <param name="key">Key to use</param>
            <returns>eTag for key, else null</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.IsExpired(System.String)">
            <summary>
            Checks if key is expired
            </summary>
            <param name="key">The key to check</param>
            <returns>True if expired, else false</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.IBarrel.GetExpiration(System.String)">
            <summary>
            Gets the expiration date for a key
            </summary>
            <param name="key">The key to check</param>
            <returns>The date if exists, else null</returns>
        </member>
        <member name="T:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel">
            <summary>
            Key/Value data store for any data object.
            Allows for saving data along with expiration dates and ETags.
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.ApplicationId">
            <summary>
            路径标识，与基础路径一起合成完整路径
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.AutoExpire">
            <summary>
            AutoExpire
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Current">
            <summary>
            Gets the instance of the Barrel
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Create(System.String)">
            <summary>
            指定路径创建缓存数据库
            </summary>
            <param name="cacheDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Exists(System.String)">
            <summary>
            Checks to see if the key exists in the Barrel.
            </summary>
            <param name="key">Unique identifier for the entry to check</param>
            <returns>If the key exists</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.IsExpired(System.String)">
            <summary>
            Checks to see if the entry for the key is expired.
            </summary>
            <param name="key">Key to check</param>
            <returns>If the expiration data has been met</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.GetKeys(Palink.Tools.System.PLCaching.MonkeyCache.CacheState)">
            <summary>
            Gets all the keys that are saved in the cache
            </summary>
            <returns>The IEnumerable of keys</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.GetKeys(System.String,Palink.Tools.System.PLCaching.MonkeyCache.CacheState)">
            <summary>
            根据缓存状态和标签值获取缓存
            </summary>
            <param name="eTag">标签名称</param>
            <param name="state">State to get: Multiple with flags: CacheState.Active | CacheState.Expired</param>
            <returns>The keys</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Get``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Gets the data entry for the specified key.
            </summary>
            <param name="key">Unique identifier for the entry to get</param>
            <param name="jsonSerializationSettings">Custom json serialization settings to use</param>
            <returns>The data object that was stored if found, else default(T)</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.GetETag(System.String)">
            <summary>
            Gets the ETag for the specified key.
            </summary>
            <param name="key">Unique identifier for entry to get</param>
            <returns>The ETag if the key is found, else null</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.GetExpiration(System.String)">
            <summary>
            Gets the DateTime that the item will expire for the specified key.
            </summary>
            <param name="key">Unique identifier for entry to get</param>
            <returns>The expiration date if the key is found, else null</returns>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Add(System.String,System.String,System.TimeSpan,System.String)">
            <summary>
            Adds a string to the barrel
            </summary>
            <param name="key">Unique identifier for the entry</param>
            <param name="data">Data string to store</param>
            <param name="expireIn">Time from UtcNow to expire entry in</param>
            <param name="eTag">Optional eTag information</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Add``1(System.String,``0,System.TimeSpan,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Adds an entry to the barrel
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key">Unique identifier for the entry</param>
            <param name="data">Data object to store</param>
            <param name="expireIn">Time from UtcNow to expire entry in</param>
            <param name="eTag">Optional eTag information</param>
            <param name="jsonSerializationSettings">Custom json serialization settings to use</param>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.EmptyExpired">
            <summary>
            Empties all expired entries that are in the Barrel.
            Throws an exception if any deletions fail and rolls back changes.
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.EmptyAll">
            <summary>
            Empties all expired entries that are in the Barrel.
            Throws an exception if any deletions fail and rolls back changes.
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLCaching.MonkeyCache.SQLite.Barrel.Empty(System.String[])">
            <summary>
            Empties all specified entries regardless if they are expired.
            Throws an exception if any deletions fail and rolls back changes.
            </summary>
            <param name="key">keys to empty</param>
        </member>
        <member name="T:Palink.Tools.System.PLConfiguration.BaseAppSettings">
            <summary>
            appsettings.json配置文件数据读取类
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLConfiguration.BaseAppSettings.Config">
            <summary>
            配置文件的根节点
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLConfiguration.BaseAppSettings.#cctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Palink.Tools.System.PLFile.IniFile">
            <summary>
            INIFile
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLFile.IniFile.#ctor(System.String)">
            <summary>
            传入INI文件路径构造对象,路径示例c:/test/test.ini
            </summary>
            <param name="iniPath">INI文件路径</param>
        </member>
        <member name="P:Palink.Tools.System.PLFile.IniFile.Path">
            <summary>
            获取路径
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLFile.IniFile.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="section">分组节点</param>
            <param name="key">关键字</param>
            <param name="value">值</param>
        </member>
        <member name="M:Palink.Tools.System.PLFile.IniFile.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">分组节点</param>
            <param name="key">关键字</param>
            <returns>值</returns>
        </member>
        <member name="M:Palink.Tools.System.PLFile.IniFile.IniReadValues(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="section">分组节点</param>
            <param name="key">关键字</param>
            <returns>值的字节表现形式</returns>
        </member>
        <member name="M:Palink.Tools.System.PLFile.IniFile.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLFile.IniFile.ClearSection(System.String)">
            <summary>
            删除ini文件下指定段落下的所有键
            </summary>
            <param name="section">分组节点</param>
        </member>
        <member name="T:Palink.Tools.System.PLTime.ChineseCalendar">
            <summary>
            中国农历类 支持 1900.1.31日起至 2069.12.31日止的数据
            </summary>
            <remarks>
            本程序使用数据来源于网上的万年历查询，并综合了一些其它数据
            </remarks>
        </member>
        <member name="F:Palink.Tools.System.PLTime.ChineseCalendar.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据<br/>
             说明如下：<br/>
            1-4：判断当年是否为闰年，若为闰年，则为闰年的月份，反之为0；<br/>
            5-16：为除了闰月外的正常月份是大月还是小月，1为30天，0为29天。（注意：1月对应第16位，2月对应第15位……12月对应第5位)<br/>
            17-20： 表示闰月是大月还是小月，若为1，则为大月，若为0，则为小月。（注意：仅当存在闰月的情况下有意义）<br/>
             -<br/>
            举例说明：<br/>
            例一：0x04bd8<br/>
            对应二进制：0000    0100     1011    1101    1000<br/>
            则表示当年有闰月8月，且闰月为小月29天<br/>
            该年1-12月的天数为：29    30   29   29   30   29   30    29（闰月）  30     30   29    30<br/>
            例二：0x04ae0<br/>
            对应二进制：0000    0100     1010    1110    0000<br/>
            则表示当年没有闰月<br/>
            该年1-12月的天数为：29    30    29     29    30    29    30    29    30   30    30    29<br/>
            补充闰月介绍：<br/>
            闰月是阴阳历中为使历年平均长度接近会归年而增设的月。阴阳历以朔望月的长度（29.5306日）为一个月的平均值，全年12个月，同回归年（365.2422日）相差约10日21时，故需要置闰，三年闰一个月，五年闰二个月，十九年闰七个月。阴阳历以朔望月的长度（29.5306日）为一个月的平均值，全年12个月，同回归年（365.2422日）相差约10日21时，故需要置闰，三年闰一个月，五年闰二个月，十九年闰七个月。
            </remarks>
        </member>
        <member name="F:Palink.Tools.System.PLTime.ChineseCalendar.ConstellationName">
            <summary>
            星座
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.ChineseCalendar.ChineseConstellationName">
            <summary>
            二十八星宿
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.ChineseCalendar.SolarTerm">
            <summary>
            节气数据
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.CustomWorkDays">
            <summary>
            自定义的工作日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.CustomHolidays">
            <summary>
            自定义的节假日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.SolarHolidayInfo">
            <summary>
            按公历计算的通用节假日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.LunarHolidayInfo">
            <summary>
            按农历计算的通用节假日
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.#ctor(System.DateTime@)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="leapMonthFlag">闰月标志</param>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.GetChineseMonthDays(System.Int32,System.Int32)">
            <summary>
            传回农历 y年m月的总天数
            </summary>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.GetChineseLeapMonth(System.Int32)">
            <summary>
            传回农历 y年闰哪个月 1-12 , 没闰传回 0
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.GetChineseLeapMonthDays(System.Int32)">
            <summary>
            传回农历 y年闰月的天数
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary>
            <param name="dt"></param>
            <returns></returns>
            
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
            <param name="num"></param>
            <param name="bitPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
            <param name="dayOfWeek"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
            <param name="date"></param>
            <param name="month"></param>
            <param name="week"></param>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.IsHoliday">
            <summary>
            今天是否是假期
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.IsWorkDay">
            <summary>
            今天是否是工作日
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.IsWeekend">
            <summary>
            是否是周末
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.Today">
            <summary>
            农历今天
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseTwentyFourPrevDay">
            <summary>
            当前日期前一个最近节气
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.ChineseTwentyFourNextDay">
            <summary>
            当前日期后一个最近节气
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.NextDay">
            <summary>
            取下一天
            </summary>
            <returns></returns>
        </member>
        <member name="P:Palink.Tools.System.PLTime.ChineseCalendar.PervDay">
            <summary>
            取前一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.AddDays(System.Int32)">
            <summary>
            取下n天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.AddWorkDays(System.Int32)">
            <summary>
            取下n天
            </summary>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.System.PLTime.ChineseCalendar.AddMonths(System.Int32)">
            <summary>
            加n月
            </summary>
            <returns></returns>
        </member>
        <member name="T:Palink.Tools.System.PLTime.DateInfoStruct">
            <summary>
            日期信息
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.DateInfoStruct.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.DateInfoStruct.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.DateInfoStruct.Recess">
            <summary>
            假期长度
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.DateInfoStruct.HolidayName">
            <summary>
            节假日名
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLTime.DateInfoStruct.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            日期信息
            </summary>
            <param name="month"></param>
            <param name="day"></param>
            <param name="recess"></param>
            <param name="name"></param>
        </member>
        <member name="T:Palink.Tools.System.PLTime.WeekHolidayStruct">
            <summary>
            节假日信息
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.WeekHolidayStruct.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.WeekHolidayStruct.WeekAtMonth">
            <summary>
            这个月第几周
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.WeekHolidayStruct.WeekDay">
            <summary>
            周末日
            </summary>
        </member>
        <member name="F:Palink.Tools.System.PLTime.WeekHolidayStruct.HolidayName">
            <summary>
            假日名
            </summary>
        </member>
        <member name="M:Palink.Tools.System.PLTime.WeekHolidayStruct.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            节假日信息
            </summary>
            <param name="month"></param>
            <param name="weekAtMonth"></param>
            <param name="weekDay"></param>
            <param name="name"></param>
        </member>
        <member name="T:Palink.Tools.Utils.CoreTool">
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
            <summary>
            CoreTool
            </summary>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.SetForegroundWindow(System.IntPtr)">
            <summary>
            设置为前景窗口
            </summary>
            <param name="hwnd"></param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.DelayShutdown(System.Int32)">
            <summary>
            延时关机
            </summary>
            <param name="delay">延时时间/秒</param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.DelayRestart(System.Int32)">
            <summary>
            延时重启
            </summary>
            <param name="delay">延时时间/秒</param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.TimedShutDown(System.DateTime)">
            <summary>
            定时关机
            </summary>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.TimedRestart(System.DateTime)">
            <summary>
            定时关机
            </summary>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CancelShutDown">
            <summary>
            取消关机
            </summary>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.IsExistDirectory(System.String)">
            <summary>  
            检测指定目录是否存在  
            </summary>  
            <param name="directoryPath">目录的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.IsExistFile(System.String)">
            <summary>  
            检测指定文件是否存在,如果存在则返回true。  
            </summary>  
            <param name="filePath">文件的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.IsEmptyDirectory(System.String)">
            <summary>  
            检测指定目录是否为空  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.Contains(System.String,System.String)">
            <summary>  
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>  
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。  
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.Contains(System.String,System.String,System.Boolean)">
            <summary>  
            检测指定目录中是否存在指定的文件  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>  
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。  
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>   
            <param name="isSearchChild">是否搜索子目录</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CreateDirectory(System.String)">
            <summary>  
            创建一个目录  
            </summary>  
            <param name="directoryPath">目录的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CreateFile(System.String)">
            <summary>  
            创建一个文件。  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CreateFile(System.String,System.Byte[])">
            <summary>  
            创建一个文件,并将字节流写入文件。  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
            <param name="buffer">二进制流数据</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetLineCount(System.String)">
            <summary>  
            获取文本文件的行数  
            </summary>  
            <param name="filePath">文件的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileSize(System.String)">
            <summary>  
            获取一个文件的长度,单位为Byte  
            </summary>  
            <param name="filePath">文件的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileSizeByKb(System.String)">
            <summary>  
            获取一个文件的长度,单位为KB  
            </summary>  
            <param name="filePath">文件的路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileSizeByMb(System.String)">
            <summary>  
            获取一个文件的长度,单位为MB  
            </summary>  
            <param name="filePath">文件的路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileNames(System.String)">
            <summary>  
            获取指定目录中所有文件列表  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>  
            获取指定目录及子目录中所有文件列表  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>  
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。  
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>  
            <param name="isSearchChild">是否搜索子目录</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetDirectories(System.String)">
            <summary>  
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>  
            获取指定目录及子目录中所有子目录列表  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>  
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。  
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>  
            <param name="isSearchChild">是否搜索子目录</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.WriteText(System.String,System.String)">
            <summary>  
            向文本文件中写入内容  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
            <param name="content">写入的内容</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.AppendText(System.String,System.String)">
            <summary>  
            向文本文件的尾部追加内容  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
            <param name="content">写入的内容</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.Copy(System.String,System.String)">
            <summary>  
            将源文件的内容复制到目标文件中  
            </summary>  
            <param name="sourceFilePath">源文件的绝对路径</param>  
            <param name="destFilePath">目标文件的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.Move(System.String,System.String)">
            <summary>  
            将文件移动到指定目录  
            </summary>  
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>  
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.StreamToBytes(System.IO.Stream)">
            <summary>  
            将流读取到缓冲区中  
            </summary>  
            <param name="stream">原始流</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.FileToBytes(System.String)">
            <summary>  
            将文件读取到缓冲区中  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.FileToString(System.String)">
            <summary>  
            将文件读取到字符串中  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.FileToString(System.String,System.Text.Encoding)">
            <summary>  
            将文件读取到字符串中  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
            <param name="encoding">字符编码</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetParentDirectoryName(System.String,System.Int32)">
            <summary>
            获取上级文件夹名称
            </summary>
            <param name="path">路径</param>
            <param name="degree">级数</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetParentDirectory(System.String,System.Int32)">
            <summary>
            获取上级文件夹路径
            </summary>
            <param name="path">路径</param>
            <param name="degree">级数</param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileName(System.String)">
            <summary>  
            从文件的绝对路径中获取文件名( 包含扩展名 )  
            </summary>  
            <param name="filePath">文件的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetFileNameNoExtension(System.String)">
            <summary>  
            从文件的绝对路径中获取文件名( 不包含扩展名 )  
            </summary>  
            <param name="filePath">文件的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetExtension(System.String)">
            <summary>  
            从文件的绝对路径中获取扩展名  
            </summary>  
            <param name="filePath">文件的绝对路径</param>          
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.ClearDirectory(System.String)">
            <summary>  
            清空指定目录下所有文件及子目录,但该目录依然保存.  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.ClearFile(System.String)">
            <summary>  
            清空文件内容  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.DeleteFile(System.String)">
            <summary>  
            删除指定文件  
            </summary>  
            <param name="filePath">文件的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.DeleteDirectory(System.String)">
            <summary>  
            删除指定目录及其所有子目录  
            </summary>  
            <param name="directoryPath">指定目录的绝对路径</param>  
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetDouble(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
                Converts four UInt16 values into a IEEE 64 floating point format.
            </summary>
            <param name="b3">Highest-order ushort value.</param>
            <param name="b2">Second-to-highest-order ushort value.</param>
            <param name="b1">Second-to-lowest-order ushort value.</param>
            <param name="b0">Lowest-order ushort value.</param>
            <returns>IEEE 64 floating point value.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetSingle(System.UInt16,System.UInt16)">
            <summary>
                Converts two UInt16 values into a IEEE 32 floating point format.
            </summary>
            <param name="highOrderValue">High order ushort value.</param>
            <param name="lowOrderValue">Low order ushort value.</param>
            <returns>IEEE 32 floating point value.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetUInt32(System.UInt16,System.UInt16)">
            <summary>
                Converts two UInt16 values into a UInt32.
            </summary>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetAsciiBytes(System.Byte[])">
            <summary>
                Converts an array of bytes to an ASCII byte array.
            </summary>
            <param name="numbers">The byte array.</param>
            <returns>An array of ASCII byte values.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GetAsciiBytes(System.UInt16[])">
            <summary>
                Converts an array of UInt16 to an ASCII byte array.
            </summary>
            <param name="numbers">The ushort array.</param>
            <returns>An array of ASCII byte values.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.NetworkBytesToHostUInt16(System.Byte[])">
            <summary>
                Converts a network order byte array to an array of UInt16 values in host order.
            </summary>
            <param name="networkBytes">The network order byte array.</param>
            <returns>The host order ushort array.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.HexToBytes(System.String)">
            <summary>
                Converts a hex string to a byte array.
            </summary>
            <param name="hex">The hex string.</param>
            <returns>Array of bytes.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CalculateLrc(System.Byte[])">
            <summary>
                Calculate Longitudinal Redundancy Check.
            </summary>
            <param name="data">The data used in LRC.</param>
            <returns>LRC value.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CalculateCrc(System.Byte[])">
            <summary>
                Calculate Cyclical Redundancy Check.
            </summary>
            <param name="data">The data used in CRC.</param>
            <returns>CRC value.</returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.GenerateString(System.Int32)">
            <summary>
            随机字符串，包含在0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.CreateFolderInLocalMachine(System.String)">
            <summary>
            CreateFolderInLocalMachine
            </summary>
            <param name="targetPath"></param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.DeleteFolderInLocalMachine(System.String)">
            <summary>
            DeleteFolderInLocalMachine
            </summary>
            <param name="targetPath"></param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.SetupKeyValueInLocalMachine(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>
            SetupKeyValueInLocalMachine
            </summary>
            <param name="targetPath"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="kind"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.SoftwareMutex(System.Threading.Mutex@)">
            <summary>
            软件多开锁
            </summary>
            <param name="appMutex"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.AutoStart(System.String,System.String,System.String,System.TimeSpan,System.Boolean)">
            <summary>
            设置开机自启，需要在管理员模式下运行才可有效
            </summary>
            <param name="taskName">计划任务名称</param>
            <param name="exeFullName">exe文件全路径</param>
            <param name="desc">描述</param>
            <param name="delay">延时启动时间</param>
            <param name="used">是否开机自启</param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.TopMost(System.Nullable{System.IntPtr},System.Int32)">
            <summary>
            窗口置顶
            </summary>
            <param name="hwnd"></param>
            <param name="delay"></param>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.AllowEdgeSwipe(System.Boolean)">
            <summary>
            边缘侧滑
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="F:Palink.Tools.Utils.CoreTool.HexCharacterCountNotEven">
            <summary>
            十六进制字符串必须有偶数个字符
            </summary>
        </member>
        <member name="F:Palink.Tools.Utils.CoreTool.NetworkBytesNotEven">
            <summary>
            数组networkBytes必须包含偶数个字节
            </summary>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.AddTask(System.String,System.String,System.String,System.TimeSpan)">
            <summary>
            添加计划任务
            </summary>
            <param name="taskName"></param>
            <param name="exeFullName"></param>
            <param name="description"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.UpdateTask(System.String,System.String,System.TimeSpan)">
            <summary>
            修改已存在计划任务
            </summary>
            <param name="taskName"></param>
            <param name="description"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:Palink.Tools.Utils.CoreTool.DeleteTask(System.String)">
            <summary>
            删除计划任务
            </summary>
            <param name="taskName"></param>
        </member>
        <member name="T:Palink.Tools.Utils.MouseStatus">
            <summary>
            鼠标状态
            </summary>
        </member>
        <member name="F:Palink.Tools.Utils.MouseStatus.Move">
            <summary>
            移动
            </summary>
        </member>
        <member name="F:Palink.Tools.Utils.MouseStatus.LeftDown">
            <summary>
            左键按下
            </summary>
        </member>
        <member name="F:Palink.Tools.Utils.MouseStatus.LeftUp">
            <summary>
            左键抬起
            </summary>
        </member>
        <member name="F:Palink.Tools.Utils.MouseStatus.RightDown">
            <summary>
            右键按下
            </summary>
        </member>
        <member name="F:Palink.Tools.Utils.MouseStatus.RightUp">
            <summary>
            右键抬起
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it. Specifies that an input argument was not null when the call returns.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with a field or property member.</summary>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>Initializes the attribute with the list of field and property members.</summary>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values when returning with the specified return value condition.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>Initializes the attribute with the specified return value condition and a field or property member.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>Initializes the attribute with the specified return value condition and list of field and property members.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
    </members>
</doc>
